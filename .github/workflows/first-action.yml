name: Poetry sample project
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get codebase
        uses: actions/checkout@v4
      - name: Install poetry
        uses: abatilo/actions-poetry@v4
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - name: Define a cache for the virtual environment based on the dependencies lock file
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
  test:
    environment: dev
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get codebase
        uses: actions/checkout@v4
      - name: Install poetry
        uses: abatilo/actions-poetry@v4
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - name: Define a cache for the virtual environment based on the dependencies lock file
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
      - name: Run pytests
        run: poetry run pytest -v
  deploy:
    environment: dev
    env:
      PROJ_NM: ${{ secrets.REPO_NAME }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get codebase
        uses: actions/checkout@v4
      - name: Install poetry
        uses: abatilo/actions-poetry@v4
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - name: Define a cache for the virtual environment based on the dependencies lock file
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
      - name: Deploy code
        run: echo "Deployed successfully from ${{ env.PROJ_NM }}"

        